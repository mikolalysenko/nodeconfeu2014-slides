{
  "name": "find-global-packages",
  "version": "0.0.1",
  "description": "find all global packages, list them by directory",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/find-global-packages.git"
  },
  "keywords": [
    "find",
    "global",
    "package",
    "packages",
    "list"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us",
    "url": "http://neversaw.us/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/chrisdickinson/find-global-packages/issues"
  },
  "homepage": "https://github.com/chrisdickinson/find-global-packages",
  "dependencies": {
    "which": "^1.0.5"
  },
  "devDependencies": {
    "tape": "^2.10.2"
  },
  "readme": "# find-global-packages\n\n> one module to rule them all, one module to find them,\n> one module to bring them all\n>\n> and in the darkness, lexically bind them\n\nfind all globally installed packages, resolving to a list of directories\nrepresenting global packages.\n\n```javascript\nvar findGlobal = require('find-global-packages')\n\nfindGlobal(function(err, dirs) {\n  // dirs will be a list of strings representing\n  // paths to globally installed packages.\n})\n```\n\n## API\n\n### findGlobal(ready :Function(err :{Error|null}, dirs :Array\\<String\\>))\n\nTakes a single node-style callback, resolves to either an error or a list\nof directories. Directories are vetted by the presence of a file called\n`package.json` (but not its contents).\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "find-global-packages@0.0.1",
  "_from": "find-global-packages@0.0.1"
}
