{
  "name": "script-injector",
  "version": "0.1.7",
  "description": "Inject inline javascript into an HTML stream.",
  "main": "index.js",
  "scripts": {
    "test": "node test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dlmanning/script-injector.git"
  },
  "keywords": [
    "html",
    "stream",
    "script",
    "inject",
    "injector",
    "injection",
    "parser"
  ],
  "author": {
    "name": "David Manning"
  },
  "license": "MIT",
  "dependencies": {
    "trumpet": "~1.6.3",
    "through": "~2.3.4",
    "duplexer": "~0.1.1"
  },
  "devDependencies": {
    "tape": "~1.1.0",
    "concat-stream": "~1.0.1"
  },
  "readme": "#script-injector\n\n1. provides a through stream that allows you to inject inline javascript into an html text stream.\n2. Uses [`trumpet`](https://github.com/substack/node-trumpet) to parse your html.\n3. Should only be used for good, never for evil\n\n## Installation\n\n`npm install script-injector`\n\n\n## How to use\n\nJust pipe a stream of html through script-injector. You can pass in either some stringified code or a function object. What could be easier?\n\n```javascript\nscriptInjector = require('script-injector');\n\n// Then do something like this somewhere else\n\nfs.createReadStream('anHTMLFile')\n  .pipe(scriptInjector(aFunction))\n  .pipe(someOtherPlace);\n```\n\n`script-injector` will insert the provided code *before* your first script tags, or just before `</body>` if you don't have any other scripts.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dlmanning/script-injector/issues"
  },
  "homepage": "https://github.com/dlmanning/script-injector",
  "_id": "script-injector@0.1.7",
  "_from": "script-injector@~0.1.0"
}
